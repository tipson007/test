# name: Create AWS IAM User

# on:
#   push:
#     branches:
#       - develop
#       - master

# jobs:
#   # condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
#   terraform:
#     name: Terraform Plan
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#         working-directory: ./terraform
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
      
#     # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           cli_config_credentials_token: ${{ secrets.tfc_team_token }}
      
#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Plan
#         run: terraform plan -input=false

#   terra_form:
#     name: Terraform apply
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#         working-directory: ./terraform
#     # if:  success() && github.ref == 'refs/heads/main' && github.event_name == 'pull_request' && github.event.pull_request.merged == true
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
      
#     # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           cli_config_credentials_token: ${{ secrets.tfc_team_token }}
      
#       - name: Terraform Init
#         run: terraform init
      
#       - name: Terraform Apply
#         run: terraform apply -auto-approve

#       - name: Terraform Destroy
#         run: terraform destroy -auto-approve


name: Deploy EC2 Instance

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  Terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
       shell: bash
       working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4      
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.tfc_team_token }}
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Validate
      run: terraform validate 
       
    - name: Terraform Plan
      run: terraform plan
           
    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Terraform Destroy
      if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'workflow_dispatch' }}
      run: terraform destroy -auto-approve

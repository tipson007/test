name: Create AWS IAM User

on:
  push:
    branches:
      - develop
      - master

jobs:
  # condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Navigate to Terraform directory
        run: cd path/to/terraform/directory
      
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.tfc_team_token }}
      
      - name: Terraform Init
        run: terraform init

      - name: Terraform plan
        run: terraform plan -input=false

  # terra_form:
  #   name: Terraform apply
  #   runs-on: ubuntu-latest
  #   # if:  success() && github.ref == 'refs/heads/main' && github.event_name == 'pull_request' && github.event.pull_request.merged == true
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
      
  #   # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         cli_config_credentials_token: ${{ secrets.tfc_team_token }}
      
  #     - name: Terraform Init
  #       run: terraform init
      
  #     - name: Terraform Apply
  #       run: terraform apply -auto-approve
